
<%- include('../includes/usersPartials/userHead.ejs') %>
<style>
  .container-main{
  margin-top: 5%;
  }
  .p-div {
    line-height: 40px;
  }
  
</style>

<div class="container container-main border rounded p-5 shadow mb-5">
  <div class="d-flex justify-content-center"><h2>Order Details</h2></div>

  <div class="mt-3 border-bottom shadow-sm border-primary-subtle">
    
      <h3>Delivery Address :</h3>
    
    
    <div class="ms-1 mt-3 p-div">
      <strong>
        <p>Name : <%=order[0].address.firstname%> <%=order[0].address.lastname%></p>
        <p>Street Address : <%=order[0].address.address%></p>
        <p>State,District : <%=order[0].address.state%>,<%=order[0].address.district%></p>
        <p>City,Locality : <%=order[0].address.city%>,<%=order[0].address.locality%></p>
        <p>PostalCode : <%=order[0].address.postalcode%></p>
        <p>Phone : <%=order[0].address.phone%></p>
      </strong>
    </div>
  </div>
  <div class="mt-3">
    <h3>Product Details :</h3>
    <% order.forEach((item)=>{ %>

    
    <div
      class="d-flex align-items-center  mt-3 border-primary-subtle border-bottom shadow-sm"
    >
      <div class="mb-3">
        <img style="max-width: 120px" src="/productImg/<%=item.productInfo.image[0]%>" alt="something" />
      </div>
      <div style="width: 100%;" class="ms-5 p-div mb-3">
        <strong>
          <p>Qty : <%=item.productsDetails.quantity%></p>
          <p>Product Name : <%=item.productInfo.productName%></p>
          <p>Size : <%=item.productsDetails.size%></p>
          <p>Price : ₹<%=item.productInfo.productPrice * item.productsDetails.quantity%></p>
        </strong>
        <%if(order[0].orderStatus !== 'delivered' && order.length > 1){%>
          <div class="d-flex justify-content-end">
            <button style="background-color: #b04fff;" class="btn text-white cancel-single-product" 
            data-productid="<%=item.productsDetails.productId%>"
            data-productsize="<%=item.productsDetails.size%>"
            data-orderid="<%=item._id%>"
            data-productquantity="<%=item.productsDetails.quantity%>"
            data-productprice="<%=item.productInfo.productPrice * item.productsDetails.quantity%>"
            >Cancel Product</button>
          </div>
        <%}%>
        
      </div>
    </div>
    <%})%>

    <div class="mt-3">
      <h3>Payment Details :</h3>
      <div class="ms-1 mt-3 p-div">
        <strong>
          <p>Payment Method : <%=order[0].paymentDetails.method%></p>
          <p>Payment Id : <%=order[0].paymentDetails.paymentId%></p>
          <p class="text-danger">Total Amount :  ₹<%=order[0].grandTotal.toFixed(2)%></p>

          <% if(order[0].walletMoney){%>
          <p class="text-danger">Payed From wallet :  ₹<%=order[0].walletMoney%></p>
         <%} if(order[0].couponDiscount){%>
          <p class="text-danger">Coupon Discount :  ₹<%=order[0].couponDiscount%></p>
         <% }%>
        </strong>
      </div>

      <%if(order[0].cancelRequested === true){%>
        <div class="shadow-sm p-4 mt-4 rounded d-flex justify-content-center">
          <h4 class="text-warning">Order Status : <%=order[0].orderStatus%></h4>
        </div>
      <%}else if(order[0].isCanceled === true){%>
        <div class="shadow-sm p-4 mt-4 rounded d-flex justify-content-center">
          <h4 class="text-warning">Order Status : <%=order[0].orderStatus%></h4>
          <p class="ms-4"> (Reason : <%=order[0].cancellationReason%>)</p>
        </div>

       <%}else if(order[0].cancelRequestDeclined === true && order[0].orderStatus !== 'delivered'){%>
        <div class=" p-4 mt-4 rounded d-flex justify-content-center">
          <h4 class="text-warning">Cancellation Request Status : <span class="text-danger">Declined</span></h4>
          <p class="ms-4"> (Reason : <%=order[0].declineRequestReason%>)</p>
        </div>
        <!-- <div class="d-flex justify-content-end">
          <button onclick="downloadPdf('<%=order[0]._id%>')"  style="background-color: #b04fff;" class="btn text-white me-5">Download PDF</button>
        </div> -->
        <%}else if(order[0].orderStatus !== 'pending'){%>
        <div class="d-flex justify-content-end">
          <button onclick="downloadPdf('<%=order[0]._id%>')"  style="background-color: #b04fff;" class="btn text-white me-5">Download PDF</button>

          <button id="cancel-order-btn" style="background-color: #b04fff;" class="btn text-white"><%=order[0].orderStatus !== 'delivered' ? 'Cancel Order' :'Return Order' %> </button>

          
          </div>
        <div
        class="border shadow-sm p-4 mt-4 rounded form-div"
        style="display: none"
      >
        
          <label class="mb-3" style="font-size: larger"
            ><strong>Reason For Cancellation</strong></label
          >
          <textarea
            class="form-control"
            id="orderReason"
            name="reason"
            placeholder=""
          ></textarea>
          <p class="text-danger error-p"></p>
          <div class="d-flex mt-3">
            <button
            data-orderid="<%=order[0]._id%>"
              id="cancel-order-submit"
              type="submit"
              style="background-color: #b04fff"
              class="btn text-white"
            >
              Submit
            </button>
          </div>
        
      </div>
      <%}%>
      <div class="d-flex justify-content-end align-items-center">
        <%if(order[0].orderStatus === 'pending' && order[0].cancelRequested !== true){%>
          <i class="fa-solid fa-triangle-exclamation text-danger me-1"></i><strong class="text-danger me-4">Payment Pending</strong>
          <div>
            <button data-totalamount="<%=order[0].grandTotal%>" data-orderid="<%=order[0]._id%>" style="background-color: #b04fff;" class="btn text-white payment-btn">Complete your Payment</button>
          </div>
          <%}%>
      </div>
    </div>
  </div>
</div>

<script>
  const cancelOrderbtn = document.getElementById("cancel-order-btn");
  if(cancelOrderbtn){
    cancelOrderbtn.addEventListener("click", () => {
    if (cancelOrderbtn.innerText === "Cancel Order") {
      cancelOrderbtn.innerText = "Close";
    } else {
      cancelOrderbtn.innerText = "Cancel Order";
    }
    const formDiv = document.querySelector(".form-div");
    if (formDiv.style.display === "none") {
      formDiv.style.display = "block";
    } else {
      formDiv.style.display = "none";
    }
  });
  }
  
</script>
<script>
  const submitBtn = document.getElementById('cancel-order-submit');
  if(submitBtn){
    submitBtn.addEventListener('click',()=>{
    
    const reason = document.getElementById('orderReason').value;
    const errorP = document.querySelector('.error-p');
    if(reason === ''){
      errorP.innerText = 'This Field Cannot Be Empty'
      setTimeout(() => {
        errorP.innerText = '';
      }, 3000);
    }else{
      const orderId = submitBtn.dataset.orderid ;
      cancelOrder(reason,orderId);
    }
    
  });
  }
 

  async function cancelOrder(reason,orderId){
    const response = await fetch(`/cancelOrder/${orderId}`,{
      method : "PATCH",
      headers :{
        'content-type' : 'application/json',
      },
      body : JSON.stringify({
        reason : reason
      })

    })
    if(!response.ok){
      console.log('Failed');
    }

    const result = await response.json();

    if(result){
     await Swal.fire("Requested !");
     window.location.reload();

    }

  }


  function validateOrderAndUpdateOrder(data,rzpId,orderId){
    const amount = data.amount/100 ; 
  var options = {
    "key": rzpId,
    "amount": amount,
    "currency": "INR",
    "name": "StopShoppers",
    "description": "Test Transaction",
    "image" : "authPic.jpg",
    "order_id": data.id,
    "handler": async function(responserzp){
      try{
       const response = await fetch(`/updateOrderFromOrderDetail/${orderId}`,{
        method :"PATCH",
        headers :{
          'content-type' : 'application/json'
        },
        body : JSON.stringify({
          amount,
          rzpOrderId: responserzp.razorpay_order_id,
          rzpPaymentId: responserzp.razorpay_payment_id
        })
       });
       if(!response.ok){
        console.log('something went Wrong');
       }else{
        const result = await response.json();
        if(result === 'success'){
         await Swal.fire({
            position: "center",
            icon: "success",
            title: "Your work has been saved",
            showConfirmButton: false,
            timer: 1500
          });
          window.location.reload();
        }
       }
      
      }catch(error){
        console.log(error);
      }
    },
    "prefill": {
      "name": 'something',
      "email": 'something@getMaxListeners.com',
      
    },
    "theme": {
      "color": "#b04fff"
    }
  };

  var rzp = new Razorpay(options);
  rzp.open();

}

  const buttonPayment = document.querySelector('.payment-btn');
  if(buttonPayment){
    buttonPayment.addEventListener('click',async()=>{
   const amount =  buttonPayment.dataset.totalamount;
   const orderId = buttonPayment.dataset.orderid;
   console.log(orderId);
  const response = await fetch('/createOrderFromOrderDetail',{
    method : "POST",
    headers :{
      'content-type' : 'application/json'
    },
    body : JSON.stringify({
      totalAmount : amount
    })
  });

  if(!response.ok){
    console.log('failed to create order');
  }else{ 
    const {data,rzpId} = await response.json();
    
    validateOrderAndUpdateOrder(data,rzpId,orderId)
  }

  })
  }
 



function downloadPdf(orderId){
  window.location.href = `/downloadInvoiceAsPdf/${orderId}`;
}


const cancelSingleProduct = document.querySelectorAll('.cancel-single-product');

if(cancelSingleProduct){
  cancelSingleProduct.forEach((product)=>{
  product.addEventListener('click',async()=>{
   const productId = product.dataset.productid;
   const productSize = product.dataset.productsize;
   const orderId = product.dataset.orderid;
   const productQuantity = product.dataset.productquantity;
   const productPrice = product.dataset.productprice;
    // console.log(productPrice);
    Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes"
      }).then((result) => {
        if (result.isConfirmed) {
        cancelProduct(productId,productSize,orderId,productQuantity,productPrice);
        }
      });
   
  })
});

}



async function cancelProduct(pId,pSize,orderId,pQuantity,productPrice){
  // console.log(pId,pSize,orderId);
  console.log(productPrice);
  const response = await fetch('/cancelProductIndividually',{
    method : 'PATCH',
    headers :{
      'content-type' : 'application/json'
    },
    body : JSON.stringify({
      orderId ,
      pSize,
      pId,
      productPrice
    })
  });
  if(!response.ok){
    console.log('something went wrong');
  }else{
    const result = await response.json();
    if(result){
      await Swal.fire({
            position: "center",
            icon: "success",
            title: "Product Canceled Sucessfully",
            showConfirmButton: false,
            timer: 1500
          });
          window.location.reload();
    }
  }
}
</script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<%- include('../includes/usersPartials/userEnd.ejs') %>
